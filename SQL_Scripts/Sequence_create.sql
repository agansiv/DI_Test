
create table DI_REF_DATA (Entity varchar2(100),Field varchar2(100),VALUE VARCHAR2(100));


create table DI_REF_TEST_AUTOMATE (TEST_ID varchar2(20),Entity varchar2(100),Field varchar2(100),Type varchar2(100),SUPPLIER varchar2(100));


drop table DI_REF_ENTITY purge;

create table DI_REF_ENTITY (
Test_ID varchar2(100),
SUPP_dateOfBirth VARCHAR2(100),
SUPP_primaryExternalRefId VARCHAR2(100),
SUPP_secondaryExternalRefId VARCHAR2(100),
SUPP_primaryDataSourceCode VARCHAR2(100),
SUPP_secondaryDataSourceCode VARCHAR2(100),
SUPP_forename VARCHAR2(100),
SUPP_gender VARCHAR2(100),
SUPP_initial VARCHAR2(100),
SUPP_startDate VARCHAR2(100),
SUPP_source VARCHAR2(100),
SUPP_statusCode VARCHAR2(100),
SUPP_statusDate VARCHAR2(100),
SUPP_suffix VARCHAR2(100),
SUPP_supporterURN VARCHAR2(100),
SUPP_surname VARCHAR2(100),
SUPP_title VARCHAR2(100),
SUPP_changeofNameIndicator VARCHAR2(100),
SUPP_nonTaxPayerFlag VARCHAR2(100),
SUPP_nonTaxPayerStartDate VARCHAR2(100),
SUPP_dateOfDeath VARCHAR2(100),
SUPP_deathNotificationDate VARCHAR2(100),
SUPP_maritalStatus VARCHAR2(100),
SUPP_lsdFlag VARCHAR2(100),
SUPP_lsdIdentifier VARCHAR2(100),
SUPP_lsdType VARCHAR2(100),
ADDR_addressLine1 VARCHAR2(100),
ADDR_addressLine2 VARCHAR2(100),
ADDR_addressLine3 VARCHAR2(100),
ADDR_addressLine4 VARCHAR2(100),
ADDR_cherishedAddressHN VARCHAR2(100),
ADDR_city VARCHAR2(100),
ADDR_country VARCHAR2(100),
ADDR_county VARCHAR2(100),
ADDR_postalCode VARCHAR2(100),
ADDR_startDate VARCHAR2(100),
ADDR_validationStatus VARCHAR2(100),
ADDR_newAddressIndicator VARCHAR2(100),
SEC_ADDR_addressLine1 VARCHAR2(100),
SEC_ADDR_addressLine2 VARCHAR2(100),
SEC_ADDR_addressLine3 VARCHAR2(100),
SEC_ADDR_addressLine4 VARCHAR2(100),
SEC_ADDR_cherishedAddressHN VARCHAR2(100),
SEC_ADDR_city VARCHAR2(100),
SEC_ADDR_country VARCHAR2(100),
SEC_ADDR_county VARCHAR2(100),
SEC_ADDR_postalCode VARCHAR2(100),
SEC_ADDR_startDate VARCHAR2(100),
SEC_ADDR_validationStatus VARCHAR2(100),
SEC_ADDR_newAddressIndicator VARCHAR2(100),
CONINFO_phoneNumber VARCHAR2(100),
CONINFO_emailAddress VARCHAR2(100),
CONINFO_mobileNumber VARCHAR2(100),
GAD_confirmedOn VARCHAR2(100),
GAD_declarationDate VARCHAR2(100),
GAD_letterCode VARCHAR2(100),
GAD_method VARCHAR2(100),
GAD_reference VARCHAR2(100),
GAD_source VARCHAR2(100),
GAD_startDate VARCHAR2(100),
GAD_gadType VARCHAR2(100),
DD_accountName VARCHAR2(100),
DD_amount VARCHAR2(100),
DD_bankAccountNumber VARCHAR2(100),
DD_bankSortCode VARCHAR2(100),
DD_bankAccountCodeCRUK VARCHAR2(100),
DD_frequency VARCHAR2(100),
DD_product VARCHAR2(100),
DD_reference VARCHAR2(100),
DD_resCode VARCHAR2(100),
DD_source VARCHAR2(100),
DD_dataSource VARCHAR2(100),
DD_paymentDay VARCHAR2(100),
DD_startDate VARCHAR2(100),
DD_toBeGiftAided VARCHAR2(100),
DD_letterCodeGAD VARCHAR2(100),
DD_methodGAD VARCHAR2(100),
DD_motivation VARCHAR2(100),
DD_inMemoryName VARCHAR2(100),
DD_gadType VARCHAR2(100),
Don_amount VARCHAR2(100),
Don_bankAccountCodeCRUK VARCHAR2(100),
Don_dataSource VARCHAR2(100),
Don_dateReceived VARCHAR2(100),
Don_donationType VARCHAR2(100),
Don_eventCode VARCHAR2(100),
Don_financialPaymentReference VARCHAR2(100),
Don_letterCode VARCHAR2(100),
Don_resCode VARCHAR2(100),
Don_paymentMethod VARCHAR2(100),
Don_paymentStatus VARCHAR2(100),
Don_personalGiftAid VARCHAR2(100),
Don_reasonNotGiftAid VARCHAR2(100),
Don_product VARCHAR2(100),
Don_source VARCHAR2(100),
Don_webPageId VARCHAR2(100),
Don_originatorPaymentID VARCHAR2(100),
Don_toBeGiftAided VARCHAR2(100),
Don_letterCodeGAD VARCHAR2(100),
Don_methodGAD VARCHAR2(100),
Don_motivation VARCHAR2(100),
Don_inMemoryName VARCHAR2(100),
Don_celebrantDataSource VARCHAR2(100),
Don_celebrantExternalReference VARCHAR2(100),
Don_paymentProviderTransactId VARCHAR2(100),
Don_gadType VARCHAR2(100),
Don_excludefromAgresso VARCHAR2(100),
Don_shortCode VARCHAR2(100),
Don_statusDelay VARCHAR2(100),
Don_statusDelayUnit VARCHAR2(100),
Don_mobileOperator VARCHAR2(100),
Don_keyword VARCHAR2(100),
SuppPre_endDate VARCHAR2(100),
SuppPre_startDate VARCHAR2(100),
SuppPre_suppressionPreCode VARCHAR2(100),
SuppPre_source VARCHAR2(100),
Camp_campaignCode VARCHAR2(100),
Camp_contactedOn VARCHAR2(100),
Camp_outcome VARCHAR2(100),
Camp_versionCode VARCHAR2(100),
Camp_campaignRecipient VARCHAR2(100),
Act_category VARCHAR2(100),
Act_endDate VARCHAR2(100),
Act_letterCode VARCHAR2(100),
Act_originatorActivityID VARCHAR2(100),
EVT_eventCode VARCHAR2(100),
EVT_registrationNumber VARCHAR2(100),
EVT_entryType VARCHAR2(100),
EVT_entryFeeStatus VARCHAR2(100),
EVT_cancerType VARCHAR2(100),
EVT_fundraisingPageId VARCHAR2(100),
EVT_fundraisingPageType VARCHAR2(100),
EVT_fundraisingPageUrl VARCHAR2(100),
EVT_howHeardAbout VARCHAR2(100),
EVT_inviteSource VARCHAR2(100),
EVT_motivation VARCHAR2(100),
EVT_participationType VARCHAR2(100),
EVT_placeType VARCHAR2(100),
EVT_pledgeAmount VARCHAR2(100),
EVT_registered VARCHAR2(100),
EVT_registrationStatus VARCHAR2(100),
EVT_supporterRegistrationType VARCHAR2(100),
EVT_survivorshipActivities VARCHAR2(100),
EVT_runningNumber VARCHAR2(100),
EVT_groupName VARCHAR2(100),
EVT_groupRole VARCHAR2(100),
EVT_emergencyContactName VARCHAR2(100),
EVT_emergencyContactNumber VARCHAR2(100),
EVT_channel VARCHAR2(100),
EVT_source VARCHAR2(100),
EVTPack_merchanProductCode VARCHAR2(100),
EVTPack_quantity VARCHAR2(100),
SO_amount VARCHAR2(100),
SO_accountName VARCHAR2(100),
SO_bankAccountNumber VARCHAR2(100),
SO_bankSortCode VARCHAR2(100),
SO_crukBankAccountCode VARCHAR2(100),
SO_frequency VARCHAR2(100),
SO_reference VARCHAR2(100),
SO_source VARCHAR2(100),
SO_startDate VARCHAR2(100),
Pinfo_codeLevel1 VARCHAR2(100),
Pinfo_codeLevel2 VARCHAR2(100),
Pinfo_source VARCHAR2(100),
Pinfo_comments VARCHAR2(100),
Pinfo_startDate VARCHAR2(100),
Pinfo_endDate VARCHAR2(100),
Pinfo_siebelAttribute1 VARCHAR2(100),
Pinfo_siebelAttribute6 VARCHAR2(100),
Oppty_dataSource VARCHAR2(100),
Oppty_crukReference VARCHAR2(100),
Oppty_externalReference VARCHAR2(100),
Oppty_department VARCHAR2(100),
Oppty_journey VARCHAR2(100),
Oppty_stage VARCHAR2(100),
Oppty_source VARCHAR2(100),
Oppty_startDate VARCHAR2(100),
Oppty_description VARCHAR2(100),
Oppty_likelihood VARCHAR2(100),
Oppty_currency VARCHAR2(100),
Oppty_status VARCHAR2(100),
Oppty_endDate VARCHAR2(100),
Oppty_reasonForClosure VARCHAR2(100),
Oppty_closureSummary VARCHAR2(100),
OpptyProd_crukReference VARCHAR2(100),
OpptyProd_externalReference VARCHAR2(100),
OpptyProd_dataSource VARCHAR2(100),
OpptyProd_productCode VARCHAR2(100),
OpptyProd_targetAmount VARCHAR2(100),
OpptyProd_askAmount VARCHAR2(100),
OpptyProd_askDate VARCHAR2(100),
OpptyProd_percentage VARCHAR2(100),
OpptyProd_agreedAmount VARCHAR2(100),
OpptyProd_expectedDate VARCHAR2(100),
OpptyProd_notes VARCHAR2(100),
OpptyProd_resCode VARCHAR2(100),
OpptyProd_motivation VARCHAR2(100),
OpptyProd_inMemoryName VARCHAR2(100),
OpptyAct_crukReference VARCHAR2(100),
OpptyAct_externalReference VARCHAR2(100),
OpptyAct_dataSource VARCHAR2(100),
OpptyAct_type VARCHAR2(100),
OpptyAct_subType VARCHAR2(100),
OpptyAct_category VARCHAR2(100),
OpptyAct_subCategory VARCHAR2(100),
OpptyAct_description VARCHAR2(100),
OpptyAct_comments VARCHAR2(100),
OpptyAct_completedDate VARCHAR2(100),
OpptyAct_status VARCHAR2(100),
OpptyAct_startDate VARCHAR2(100),
OpptyAct_endDate VARCHAR2(100),
OpptyAct_source VARCHAR2(100)
);


create OR REPLACE FORCE VIEW  DI_test_records_V as
SELECT e.test_id,
generate(case when SUPP_dateOfBirth ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_dateOfBirth' ) else '' end,'SUPP_dateOfBirth' ) SUPP_dateOfBirth ,
generate(case when SUPP_primaryExternalRefId ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_primaryExternalRefId' ) else '' end,'SUPP_primaryExternalRefId' ) SUPP_primaryExternalRefId ,
generate(case when SUPP_secondaryExternalRefId ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_secondaryExternalRefId' ) else '' end,'SUPP_secondaryExternalRefId' ) SUPP_secondaryExternalRefId ,
generate(case when SUPP_primaryDataSourceCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_primaryDataSourceCode' ) else '' end,'SUPP_primaryDataSourceCode' ) SUPP_primaryDataSourceCode ,
generate(case when SUPP_secondaryDataSourceCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_secondaryDataSourceCode' ) else '' end,'SUPP_secondaryDataSourceCode' ) SUPP_secondaryDataSourceCode ,
generate(case when SUPP_forename ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_forename' ) else '' end,'SUPP_forename' ) SUPP_forename ,
generate(case when SUPP_gender ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_gender' ) else '' end,'SUPP_gender' ) SUPP_gender ,
generate(case when SUPP_initial ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_initial' ) else '' end,'SUPP_initial' ) SUPP_initial ,
generate(case when SUPP_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_startDate' ) else '' end,'SUPP_startDate' ) SUPP_startDate ,
generate(case when SUPP_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_source' ) else '' end,'SUPP_source' ) SUPP_source ,
generate(case when SUPP_statusCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_statusCode' ) else '' end,'SUPP_statusCode' ) SUPP_statusCode ,
generate(case when SUPP_statusDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_statusDate' ) else '' end,'SUPP_statusDate' ) SUPP_statusDate ,
generate(case when SUPP_suffix ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_suffix' ) else '' end,'SUPP_suffix' ) SUPP_suffix ,
generate(case when SUPP_supporterURN ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_supporterURN' ) else '' end,'SUPP_supporterURN' ) SUPP_supporterURN ,
generate(case when SUPP_surname ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_surname' ) else '' end,'SUPP_surname' ) SUPP_surname ,
generate(case when SUPP_title ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_title' ) else '' end,'SUPP_title' ) SUPP_title ,
generate(case when SUPP_changeofNameIndicator ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_changeofNameIndicator' ) else '' end,'SUPP_changeofNameIndicator' ) SUPP_changeofNameIndicator ,
generate(case when SUPP_nonTaxPayerFlag ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_nonTaxPayerFlag' ) else '' end,'SUPP_nonTaxPayerFlag' ) SUPP_nonTaxPayerFlag ,
generate(case when SUPP_nonTaxPayerStartDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_nonTaxPayerStartDate' ) else '' end,'SUPP_nonTaxPayerStartDate' ) SUPP_nonTaxPayerStartDate ,
generate(case when SUPP_dateOfDeath ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_dateOfDeath' ) else '' end,'SUPP_dateOfDeath' ) SUPP_dateOfDeath ,
generate(case when SUPP_deathNotificationDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_deathNotificationDate' ) else '' end,'SUPP_deathNotificationDate' ) SUPP_deathNotificationDate ,
generate(case when SUPP_maritalStatus ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_maritalStatus' ) else '' end,'SUPP_maritalStatus' ) SUPP_maritalStatus ,
generate(case when SUPP_lsdFlag ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_lsdFlag' ) else '' end,'SUPP_lsdFlag' ) SUPP_lsdFlag ,
generate(case when SUPP_lsdIdentifier ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_lsdIdentifier' ) else '' end,'SUPP_lsdIdentifier' ) SUPP_lsdIdentifier ,
generate(case when SUPP_lsdType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SUPP_lsdType' ) else '' end,'SUPP_lsdType' ) SUPP_lsdType ,
generate(case when ADDR_addressLine1 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_addressLine1' ) else '' end,'ADDR_addressLine1' ) ADDR_addressLine1 ,
generate(case when ADDR_addressLine2 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_addressLine2' ) else '' end,'ADDR_addressLine2' ) ADDR_addressLine2 ,
generate(case when ADDR_addressLine3 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_addressLine3' ) else '' end,'ADDR_addressLine3' ) ADDR_addressLine3 ,
generate(case when ADDR_addressLine4 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_addressLine4' ) else '' end,'ADDR_addressLine4' ) ADDR_addressLine4 ,
generate(case when ADDR_cherishedAddressHN ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_cherishedAddressHN' ) else '' end,'ADDR_cherishedAddressHN' ) ADDR_cherishedAddressHN ,
generate(case when ADDR_city ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_city' ) else '' end,'ADDR_city' ) ADDR_city ,
generate(case when ADDR_country ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_country' ) else '' end,'ADDR_country' ) ADDR_country ,
generate(case when ADDR_county ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_county' ) else '' end,'ADDR_county' ) ADDR_county ,
generate(case when ADDR_postalCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_postalCode' ) else '' end,'ADDR_postalCode' ) ADDR_postalCode ,
generate(case when ADDR_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_startDate' ) else '' end,'ADDR_startDate' ) ADDR_startDate ,
generate(case when ADDR_validationStatus ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_validationStatus' ) else '' end,'ADDR_validationStatus' ) ADDR_validationStatus ,
generate(case when ADDR_newAddressIndicator ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='ADDR_newAddressIndicator' ) else '' end,'ADDR_newAddressIndicator' ) ADDR_newAddressIndicator ,
generate(case when SEC_ADDR_addressLine1 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_addressLine1' ) else '' end,'SEC_ADDR_addressLine1' ) SEC_ADDR_addressLine1 ,
generate(case when SEC_ADDR_addressLine2 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_addressLine2' ) else '' end,'SEC_ADDR_addressLine2' ) SEC_ADDR_addressLine2 ,
generate(case when SEC_ADDR_addressLine3 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_addressLine3' ) else '' end,'SEC_ADDR_addressLine3' ) SEC_ADDR_addressLine3 ,
generate(case when SEC_ADDR_addressLine4 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_addressLine4' ) else '' end,'SEC_ADDR_addressLine4' ) SEC_ADDR_addressLine4 ,
generate(case when SEC_ADDR_cherishedAddressHN ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_cherishedAddressHN' ) else '' end,'SEC_ADDR_cherishedAddressHN' ) SEC_ADDR_cherishedAddressHN ,
generate(case when SEC_ADDR_city ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_city' ) else '' end,'SEC_ADDR_city' ) SEC_ADDR_city ,
generate(case when SEC_ADDR_country ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_country' ) else '' end,'SEC_ADDR_country' ) SEC_ADDR_country ,
generate(case when SEC_ADDR_county ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_county' ) else '' end,'SEC_ADDR_county' ) SEC_ADDR_county ,
generate(case when SEC_ADDR_postalCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_postalCode' ) else '' end,'SEC_ADDR_postalCode' ) SEC_ADDR_postalCode ,
generate(case when SEC_ADDR_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_startDate' ) else '' end,'SEC_ADDR_startDate' ) SEC_ADDR_startDate ,
generate(case when SEC_ADDR_validationStatus ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_validationStatus' ) else '' end,'SEC_ADDR_validationStatus' ) SEC_ADDR_validationStatus ,
generate(case when SEC_ADDR_newAddressIndicator ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SEC_ADDR_newAddressIndicator' ) else '' end,'SEC_ADDR_newAddressIndicator' ) SEC_ADDR_newAddressIndicator ,
generate(case when CONINFO_phoneNumber ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='CONINFO_phoneNumber' ) else '' end,'CONINFO_phoneNumber' ) CONINFO_phoneNumber ,
generate(case when CONINFO_emailAddress ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='CONINFO_emailAddress' ) else '' end,'CONINFO_emailAddress' ) CONINFO_emailAddress ,
generate(case when CONINFO_mobileNumber ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='CONINFO_mobileNumber' ) else '' end,'CONINFO_mobileNumber' ) CONINFO_mobileNumber ,
generate(case when GAD_confirmedOn ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_confirmedOn' ) else '' end,'GAD_confirmedOn' ) GAD_confirmedOn ,
generate(case when GAD_declarationDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_declarationDate' ) else '' end,'GAD_declarationDate' ) GAD_declarationDate ,
generate(case when GAD_letterCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_letterCode' ) else '' end,'GAD_letterCode' ) GAD_letterCode ,
generate(case when GAD_method ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_method' ) else '' end,'GAD_method' ) GAD_method ,
generate(case when GAD_reference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_reference' ) else '' end,'GAD_reference' ) GAD_reference ,
generate(case when GAD_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_source' ) else '' end,'GAD_source' ) GAD_source ,
generate(case when GAD_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_startDate' ) else '' end,'GAD_startDate' ) GAD_startDate ,
generate(case when GAD_gadType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='GAD_gadType' ) else '' end,'GAD_gadType' ) GAD_gadType ,
generate(case when DD_accountName ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_accountName' ) else '' end,'DD_accountName' ) DD_accountName ,
generate(case when DD_amount ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_amount' ) else '' end,'DD_amount' ) DD_amount ,
generate(case when DD_bankAccountNumber ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_bankAccountNumber' ) else '' end,'DD_bankAccountNumber' ) DD_bankAccountNumber ,
generate(case when DD_bankSortCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_bankSortCode' ) else '' end,'DD_bankSortCode' ) DD_bankSortCode ,
generate(case when DD_bankAccountCodeCRUK ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_bankAccountCodeCRUK' ) else '' end,'DD_bankAccountCodeCRUK' ) DD_bankAccountCodeCRUK ,
generate(case when DD_frequency ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_frequency' ) else '' end,'DD_frequency' ) DD_frequency ,
generate(case when DD_product ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_product' ) else '' end,'DD_product' ) DD_product ,
generate(case when DD_reference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_reference' ) else '' end,'DD_reference' ) DD_reference ,
generate(case when DD_resCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_resCode' ) else '' end,'DD_resCode' ) DD_resCode ,
generate(case when DD_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_source' ) else '' end,'DD_source' ) DD_source ,
generate(case when DD_dataSource ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_dataSource' ) else '' end,'DD_dataSource' ) DD_dataSource ,
generate(case when DD_paymentDay ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_paymentDay' ) else '' end,'DD_paymentDay' ) DD_paymentDay ,
generate(case when DD_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_startDate' ) else '' end,'DD_startDate' ) DD_startDate ,
generate(case when DD_toBeGiftAided ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_toBeGiftAided' ) else '' end,'DD_toBeGiftAided' ) DD_toBeGiftAided ,
generate(case when DD_letterCodeGAD ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_letterCodeGAD' ) else '' end,'DD_letterCodeGAD' ) DD_letterCodeGAD ,
generate(case when DD_methodGAD ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_methodGAD' ) else '' end,'DD_methodGAD' ) DD_methodGAD ,
generate(case when DD_motivation ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_motivation' ) else '' end,'DD_motivation' ) DD_motivation ,
generate(case when DD_inMemoryName ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_inMemoryName' ) else '' end,'DD_inMemoryName' ) DD_inMemoryName ,
generate(case when DD_gadType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='DD_gadType' ) else '' end,'DD_gadType' ) DD_gadType ,
generate(case when Don_amount ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_amount' ) else '' end,'Don_amount' ) Don_amount ,
generate(case when Don_bankAccountCodeCRUK ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_bankAccountCodeCRUK' ) else '' end,'Don_bankAccountCodeCRUK' ) Don_bankAccountCodeCRUK ,
generate(case when Don_dataSource ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_dataSource' ) else '' end,'Don_dataSource' ) Don_dataSource ,
generate(case when Don_dateReceived ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_dateReceived' ) else '' end,'Don_dateReceived' ) Don_dateReceived ,
generate(case when Don_donationType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_donationType' ) else '' end,'Don_donationType' ) Don_donationType ,
generate(case when Don_eventCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_eventCode' ) else '' end,'Don_eventCode' ) Don_eventCode ,
generate(case when Don_financialPaymentReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_financialPaymentReference' ) else '' end,'Don_financialPaymentReference' ) Don_financialPaymentReference ,
generate(case when Don_letterCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_letterCode' ) else '' end,'Don_letterCode' ) Don_letterCode ,
generate(case when Don_resCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_resCode' ) else '' end,'Don_resCode' ) Don_resCode ,
generate(case when Don_paymentMethod ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_paymentMethod' ) else '' end,'Don_paymentMethod' ) Don_paymentMethod ,
generate(case when Don_paymentStatus ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_paymentStatus' ) else '' end,'Don_paymentStatus' ) Don_paymentStatus ,
generate(case when Don_personalGiftAid ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_personalGiftAid' ) else '' end,'Don_personalGiftAid' ) Don_personalGiftAid ,
generate(case when Don_reasonNotGiftAid ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_reasonNotGiftAid' ) else '' end,'Don_reasonNotGiftAid' ) Don_reasonNotGiftAid ,
generate(case when Don_product ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_product' ) else '' end,'Don_product' ) Don_product ,
generate(case when Don_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_source' ) else '' end,'Don_source' ) Don_source ,
generate(case when Don_webPageId ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_webPageId' ) else '' end,'Don_webPageId' ) Don_webPageId ,
generate(case when Don_originatorPaymentID ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_originatorPaymentID' ) else '' end,'Don_originatorPaymentID' ) Don_originatorPaymentID ,
generate(case when Don_toBeGiftAided ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_toBeGiftAided' ) else '' end,'Don_toBeGiftAided' ) Don_toBeGiftAided ,
generate(case when Don_letterCodeGAD ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_letterCodeGAD' ) else '' end,'Don_letterCodeGAD' ) Don_letterCodeGAD ,
generate(case when Don_methodGAD ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_methodGAD' ) else '' end,'Don_methodGAD' ) Don_methodGAD ,
generate(case when Don_motivation ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_motivation' ) else '' end,'Don_motivation' ) Don_motivation ,
generate(case when Don_inMemoryName ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_inMemoryName' ) else '' end,'Don_inMemoryName' ) Don_inMemoryName ,
generate(case when Don_celebrantDataSource ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_celebrantDataSource' ) else '' end,'Don_celebrantDataSource' ) Don_celebrantDataSource ,
generate(case when Don_celebrantExternalReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_celebrantExternalReference' ) else '' end,'Don_celebrantExternalReference' ) Don_celebrantExternalReference ,
generate(case when Don_paymentProviderTransactId ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_paymentProviderTransactId' ) else '' end,'Don_paymentProviderTransactId' ) Don_paymentProviderTransactId ,
generate(case when Don_gadType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_gadType' ) else '' end,'Don_gadType' ) Don_gadType ,
generate(case when Don_excludefromAgresso ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_excludefromAgresso' ) else '' end,'Don_excludefromAgresso' ) Don_excludefromAgresso ,
generate(case when Don_shortCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_shortCode' ) else '' end,'Don_shortCode' ) Don_shortCode ,
generate(case when Don_statusDelay ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_statusDelay' ) else '' end,'Don_statusDelay' ) Don_statusDelay ,
generate(case when Don_statusDelayUnit ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_statusDelayUnit' ) else '' end,'Don_statusDelayUnit' ) Don_statusDelayUnit ,
generate(case when Don_mobileOperator ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_mobileOperator' ) else '' end,'Don_mobileOperator' ) Don_mobileOperator ,
generate(case when Don_keyword ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Don_keyword' ) else '' end,'Don_keyword' ) Don_keyword ,
generate(case when SuppPre_endDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SuppPre_endDate' ) else '' end,'SuppPre_endDate' ) SuppPre_endDate ,
generate(case when SuppPre_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SuppPre_startDate' ) else '' end,'SuppPre_startDate' ) SuppPre_startDate ,
generate(case when SuppPre_suppressionPreCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SuppPre_suppressionPreCode' ) else '' end,'SuppPre_suppressionPreCode' ) SuppPre_suppressionPreCode ,
generate(case when SuppPre_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SuppPre_source' ) else '' end,'SuppPre_source' ) SuppPre_source ,
generate(case when Camp_campaignCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Camp_campaignCode' ) else '' end,'Camp_campaignCode' ) Camp_campaignCode ,
generate(case when Camp_contactedOn ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Camp_contactedOn' ) else '' end,'Camp_contactedOn' ) Camp_contactedOn ,
generate(case when Camp_outcome ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Camp_outcome' ) else '' end,'Camp_outcome' ) Camp_outcome ,
generate(case when Camp_versionCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Camp_versionCode' ) else '' end,'Camp_versionCode' ) Camp_versionCode ,
generate(case when Camp_campaignRecipient ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Camp_campaignRecipient' ) else '' end,'Camp_campaignRecipient' ) Camp_campaignRecipient ,
generate(case when Act_category ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Act_category' ) else '' end,'Act_category' ) Act_category ,
generate(case when Act_endDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Act_endDate' ) else '' end,'Act_endDate' ) Act_endDate ,
generate(case when Act_letterCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Act_letterCode' ) else '' end,'Act_letterCode' ) Act_letterCode ,
generate(case when Act_originatorActivityID ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Act_originatorActivityID' ) else '' end,'Act_originatorActivityID' ) Act_originatorActivityID ,
generate(case when EVT_eventCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_eventCode' ) else '' end,'EVT_eventCode' ) EVT_eventCode ,
generate(case when EVT_registrationNumber ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_registrationNumber' ) else '' end,'EVT_registrationNumber' ) EVT_registrationNumber ,
generate(case when EVT_entryType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_entryType' ) else '' end,'EVT_entryType' ) EVT_entryType ,
generate(case when EVT_entryFeeStatus ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_entryFeeStatus' ) else '' end,'EVT_entryFeeStatus' ) EVT_entryFeeStatus ,
generate(case when EVT_cancerType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_cancerType' ) else '' end,'EVT_cancerType' ) EVT_cancerType ,
generate(case when EVT_fundraisingPageId ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_fundraisingPageId' ) else '' end,'EVT_fundraisingPageId' ) EVT_fundraisingPageId ,
generate(case when EVT_fundraisingPageType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_fundraisingPageType' ) else '' end,'EVT_fundraisingPageType' ) EVT_fundraisingPageType ,
generate(case when EVT_fundraisingPageUrl ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_fundraisingPageUrl' ) else '' end,'EVT_fundraisingPageUrl' ) EVT_fundraisingPageUrl ,
generate(case when EVT_howHeardAbout ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_howHeardAbout' ) else '' end,'EVT_howHeardAbout' ) EVT_howHeardAbout ,
generate(case when EVT_inviteSource ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_inviteSource' ) else '' end,'EVT_inviteSource' ) EVT_inviteSource ,
generate(case when EVT_motivation ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_motivation' ) else '' end,'EVT_motivation' ) EVT_motivation ,
generate(case when EVT_participationType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_participationType' ) else '' end,'EVT_participationType' ) EVT_participationType ,
generate(case when EVT_placeType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_placeType' ) else '' end,'EVT_placeType' ) EVT_placeType ,
generate(case when EVT_pledgeAmount ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_pledgeAmount' ) else '' end,'EVT_pledgeAmount' ) EVT_pledgeAmount ,
generate(case when EVT_registered ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_registered' ) else '' end,'EVT_registered' ) EVT_registered ,
generate(case when EVT_registrationStatus ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_registrationStatus' ) else '' end,'EVT_registrationStatus' ) EVT_registrationStatus ,
generate(case when EVT_supporterRegistrationType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_supporterRegistrationType' ) else '' end,'EVT_supporterRegistrationType' ) EVT_supporterRegistrationType ,
generate(case when EVT_survivorshipActivities ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_survivorshipActivities' ) else '' end,'EVT_survivorshipActivities' ) EVT_survivorshipActivities ,
generate(case when EVT_runningNumber ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_runningNumber' ) else '' end,'EVT_runningNumber' ) EVT_runningNumber ,
generate(case when EVT_groupName ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_groupName' ) else '' end,'EVT_groupName' ) EVT_groupName ,
generate(case when EVT_groupRole ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_groupRole' ) else '' end,'EVT_groupRole' ) EVT_groupRole ,
generate(case when EVT_emergencyContactName ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_emergencyContactName' ) else '' end,'EVT_emergencyContactName' ) EVT_emergencyContactName ,
generate(case when EVT_emergencyContactNumber ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_emergencyContactNumber' ) else '' end,'EVT_emergencyContactNumber' ) EVT_emergencyContactNumber ,
generate(case when EVT_channel ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_channel' ) else '' end,'EVT_channel' ) EVT_channel ,
generate(case when EVT_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVT_source' ) else '' end,'EVT_source' ) EVT_source ,
generate(case when EVTPack_merchanProductCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVTPack_merchanProductCode' ) else '' end,'EVTPack_merchanProductCode' ) EVTPack_merchanProductCode ,
generate(case when EVTPack_quantity ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='EVTPack_quantity' ) else '' end,'EVTPack_quantity' ) EVTPack_quantity ,
generate(case when SO_amount ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_amount' ) else '' end,'SO_amount' ) SO_amount ,
generate(case when SO_accountName ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_accountName' ) else '' end,'SO_accountName' ) SO_accountName ,
generate(case when SO_bankAccountNumber ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_bankAccountNumber' ) else '' end,'SO_bankAccountNumber' ) SO_bankAccountNumber ,
generate(case when SO_bankSortCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_bankSortCode' ) else '' end,'SO_bankSortCode' ) SO_bankSortCode ,
generate(case when SO_crukBankAccountCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_crukBankAccountCode' ) else '' end,'SO_crukBankAccountCode' ) SO_crukBankAccountCode ,
generate(case when SO_frequency ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_frequency' ) else '' end,'SO_frequency' ) SO_frequency ,
generate(case when SO_reference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_reference' ) else '' end,'SO_reference' ) SO_reference ,
generate(case when SO_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_source' ) else '' end,'SO_source' ) SO_source ,
generate(case when SO_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='SO_startDate' ) else '' end,'SO_startDate' ) SO_startDate ,
generate(case when Pinfo_codeLevel1 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_codeLevel1' ) else '' end,'Pinfo_codeLevel1' ) Pinfo_codeLevel1 ,
generate(case when Pinfo_codeLevel2 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_codeLevel2' ) else '' end,'Pinfo_codeLevel2' ) Pinfo_codeLevel2 ,
generate(case when Pinfo_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_source' ) else '' end,'Pinfo_source' ) Pinfo_source ,
generate(case when Pinfo_comments ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_comments' ) else '' end,'Pinfo_comments' ) Pinfo_comments ,
generate(case when Pinfo_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_startDate' ) else '' end,'Pinfo_startDate' ) Pinfo_startDate ,
generate(case when Pinfo_endDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_endDate' ) else '' end,'Pinfo_endDate' ) Pinfo_endDate ,
generate(case when Pinfo_siebelAttribute1 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_siebelAttribute1' ) else '' end,'Pinfo_siebelAttribute1' ) Pinfo_siebelAttribute1 ,
generate(case when Pinfo_siebelAttribute6 ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Pinfo_siebelAttribute6' ) else '' end,'Pinfo_siebelAttribute6' ) Pinfo_siebelAttribute6 ,
generate(case when Oppty_dataSource ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_dataSource' ) else '' end,'Oppty_dataSource' ) Oppty_dataSource ,
generate(case when Oppty_crukReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_crukReference' ) else '' end,'Oppty_crukReference' ) Oppty_crukReference ,
generate(case when Oppty_externalReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_externalReference' ) else '' end,'Oppty_externalReference' ) Oppty_externalReference ,
generate(case when Oppty_department ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_department' ) else '' end,'Oppty_department' ) Oppty_department ,
generate(case when Oppty_journey ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_journey' ) else '' end,'Oppty_journey' ) Oppty_journey ,
generate(case when Oppty_stage ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_stage' ) else '' end,'Oppty_stage' ) Oppty_stage ,
generate(case when Oppty_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_source' ) else '' end,'Oppty_source' ) Oppty_source ,
generate(case when Oppty_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_startDate' ) else '' end,'Oppty_startDate' ) Oppty_startDate ,
generate(case when Oppty_description ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_description' ) else '' end,'Oppty_description' ) Oppty_description ,
generate(case when Oppty_likelihood ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_likelihood' ) else '' end,'Oppty_likelihood' ) Oppty_likelihood ,
generate(case when Oppty_currency ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_currency' ) else '' end,'Oppty_currency' ) Oppty_currency ,
generate(case when Oppty_status ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_status' ) else '' end,'Oppty_status' ) Oppty_status ,
generate(case when Oppty_endDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_endDate' ) else '' end,'Oppty_endDate' ) Oppty_endDate ,
generate(case when Oppty_reasonForClosure ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_reasonForClosure' ) else '' end,'Oppty_reasonForClosure' ) Oppty_reasonForClosure ,
generate(case when Oppty_closureSummary ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='Oppty_closureSummary' ) else '' end,'Oppty_closureSummary' ) Oppty_closureSummary ,
generate(case when OpptyProd_crukReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_crukReference' ) else '' end,'OpptyProd_crukReference' ) OpptyProd_crukReference ,
generate(case when OpptyProd_externalReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_externalReference' ) else '' end,'OpptyProd_externalReference' ) OpptyProd_externalReference ,
generate(case when OpptyProd_dataSource ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_dataSource' ) else '' end,'OpptyProd_dataSource' ) OpptyProd_dataSource ,
generate(case when OpptyProd_productCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_productCode' ) else '' end,'OpptyProd_productCode' ) OpptyProd_productCode ,
generate(case when OpptyProd_targetAmount ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_targetAmount' ) else '' end,'OpptyProd_targetAmount' ) OpptyProd_targetAmount ,
generate(case when OpptyProd_askAmount ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_askAmount' ) else '' end,'OpptyProd_askAmount' ) OpptyProd_askAmount ,
generate(case when OpptyProd_askDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_askDate' ) else '' end,'OpptyProd_askDate' ) OpptyProd_askDate ,
generate(case when OpptyProd_percentage ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_percentage' ) else '' end,'OpptyProd_percentage' ) OpptyProd_percentage ,
generate(case when OpptyProd_agreedAmount ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_agreedAmount' ) else '' end,'OpptyProd_agreedAmount' ) OpptyProd_agreedAmount ,
generate(case when OpptyProd_expectedDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_expectedDate' ) else '' end,'OpptyProd_expectedDate' ) OpptyProd_expectedDate ,
generate(case when OpptyProd_notes ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_notes' ) else '' end,'OpptyProd_notes' ) OpptyProd_notes ,
generate(case when OpptyProd_resCode ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_resCode' ) else '' end,'OpptyProd_resCode' ) OpptyProd_resCode ,
generate(case when OpptyProd_motivation ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_motivation' ) else '' end,'OpptyProd_motivation' ) OpptyProd_motivation ,
generate(case when OpptyProd_inMemoryName ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyProd_inMemoryName' ) else '' end,'OpptyProd_inMemoryName' ) OpptyProd_inMemoryName ,
generate(case when OpptyAct_crukReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_crukReference' ) else '' end,'OpptyAct_crukReference' ) OpptyAct_crukReference ,
generate(case when OpptyAct_externalReference ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_externalReference' ) else '' end,'OpptyAct_externalReference' ) OpptyAct_externalReference ,
generate(case when OpptyAct_dataSource ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_dataSource' ) else '' end,'OpptyAct_dataSource' ) OpptyAct_dataSource ,
generate(case when OpptyAct_type ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_type' ) else '' end,'OpptyAct_type' ) OpptyAct_type ,
generate(case when OpptyAct_subType ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_subType' ) else '' end,'OpptyAct_subType' ) OpptyAct_subType ,
generate(case when OpptyAct_category ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_category' ) else '' end,'OpptyAct_category' ) OpptyAct_category ,
generate(case when OpptyAct_subCategory ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_subCategory' ) else '' end,'OpptyAct_subCategory' ) OpptyAct_subCategory ,
generate(case when OpptyAct_description ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_description' ) else '' end,'OpptyAct_description' ) OpptyAct_description ,
generate(case when OpptyAct_comments ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_comments' ) else '' end,'OpptyAct_comments' ) OpptyAct_comments ,
generate(case when OpptyAct_completedDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_completedDate' ) else '' end,'OpptyAct_completedDate' ) OpptyAct_completedDate ,
generate(case when OpptyAct_status ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_status' ) else '' end,'OpptyAct_status' ) OpptyAct_status ,
generate(case when OpptyAct_startDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_startDate' ) else '' end,'OpptyAct_startDate' ) OpptyAct_startDate ,
generate(case when OpptyAct_endDate ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_endDate' ) else '' end,'OpptyAct_endDate' ) OpptyAct_endDate ,
generate(case when OpptyAct_source ='Y' then (select type from DI_REF_TEST_AUTOMATE au where au.test_id=e.test_id and field='OpptyAct_source' ) else '' end,'OpptyAct_source' ) OpptyAct_source 
from DI_REF_ENTITY e;

drop table DI_TEST_RECORDS purge;

create table DI_TEST_RECORDS as select * from DI_TEST_RECORDS_V where rownum<1;
commit;


